# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Publish

on:
  push:
    tags:
      - 'v*'
      - 'pre*'

jobs:
  build:
    runs-on: ubuntu-24.04

    env:
      CGO_ENABLED: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get GoLang version
        run: sed -En 's/^go (.*)$/GO_VERSION=\1/p' go.mod >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "${{ env.GO_VERSION }}"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgl1-mesa-dev libxxf86vm-dev \
            libxrandr-dev libxinerama-dev \
            libx11-dev libxcursor-dev \
            libxi-dev libglx-dev \
            mingw-w64 gcc
          go mod download

      - name: Copying skripts and assets
        run: |
          mkdir -p build/common
          mkdir -p build/linux
          mkdir -p build/windows

          cp run.ps1 build/common/
          cp install.ps1 build/common/
          cp -r configs/ build/common/
          mkdir -p build/common/assets/
          cp -r assets/*.ico build/common/assets/

      - name: Build project for Linux
        run: |
          go build -v -o build/linux/
          cp -r build/common/* build/linux/

      - name: Build project for Windows
        env:
          GOOS: windows
          GOARCH: amd64
          CC: x86_64-w64-mingw32-gcc
          CXX: x86_64-w64-mingw32-g++
        run: |
          go build -v -o build/windows/
          cp -r build/common/* build/windows/

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: ProxySwitcher-Linux-x86_64
          path: build/linux/

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: ProxySwitcher-Windows-x86_64
          path: build/windows/

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ProxySwitcher
          path: artifacts/

      - name: Zip artifacts for release
        run: |
          cd artifacts/
          zip -r ../ProxySwitcher.zip *

      - name: Create release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NAME: ${{ github.ref_name }}
        run: |
          # If the release name starts with "pre", draft release
          FLAGS=()
          TITLE="Release $RELEASE_NAME"
          if [[ "$RELEASE_NAME" == pre* ]]; then
          FLAGS+=(--prerelease --draft)
          TITLE="Prerelease $RELEASE_NAME"
          fi

          # Create the release with the appropriate flags
          gh release create "$RELEASE_NAME" \
          --title "$TITLE" \
          "${FLAGS[@]}" \
          ProxySwitcher.zip
